import { RequestType, startFetchProxy, startXhrProxy, } from '@datadog/browser-core';
import { LifeCycleEventType } from './lifeCycle';
import { isAllowedRequestUrl } from './resourceUtils';
import { startTracer } from './tracer';
var nextRequestIndex = 1;
export function startRequestCollection(lifeCycle, configuration) {
    var tracer = startTracer(configuration);
    trackXhr(lifeCycle, configuration, tracer);
    trackFetch(lifeCycle, configuration, tracer);
}
export function trackXhr(lifeCycle, configuration, tracer) {
    var xhrProxy = startXhrProxy();
    xhrProxy.beforeSend(function (context, xhr) {
        if (isAllowedRequestUrl(configuration, context.url)) {
            var tracingResult = tracer.traceXhr(context, xhr);
            if (tracingResult) {
                context.traceId = tracingResult.traceId;
                context.spanId = tracingResult.spanId;
            }
            context.requestIndex = getNextRequestIndex();
            lifeCycle.notify(LifeCycleEventType.REQUEST_STARTED, {
                requestIndex: context.requestIndex,
            });
        }
    });
    xhrProxy.onRequestComplete(function (context) {
        if (isAllowedRequestUrl(configuration, context.url)) {
            lifeCycle.notify(LifeCycleEventType.REQUEST_COMPLETED, {
                duration: context.duration,
                method: context.method,
                requestIndex: context.requestIndex,
                response: context.response,
                spanId: context.spanId,
                startTime: context.startTime,
                status: context.status,
                traceId: context.traceId,
                type: RequestType.XHR,
                url: context.url,
            });
        }
    });
    return xhrProxy;
}
export function trackFetch(lifeCycle, configuration, tracer) {
    var fetchProxy = startFetchProxy();
    fetchProxy.beforeSend(function (context) {
        if (isAllowedRequestUrl(configuration, context.url)) {
            var tracingResult = tracer.traceFetch(context);
            if (tracingResult) {
                context.traceId = tracingResult.traceId;
                context.spanId = tracingResult.spanId;
            }
            context.requestIndex = getNextRequestIndex();
            lifeCycle.notify(LifeCycleEventType.REQUEST_STARTED, {
                requestIndex: context.requestIndex,
            });
        }
    });
    fetchProxy.onRequestComplete(function (context) {
        if (isAllowedRequestUrl(configuration, context.url)) {
            lifeCycle.notify(LifeCycleEventType.REQUEST_COMPLETED, {
                duration: context.duration,
                method: context.method,
                requestIndex: context.requestIndex,
                response: context.response,
                responseType: context.responseType,
                spanId: context.spanId,
                startTime: context.startTime,
                status: context.status,
                traceId: context.traceId,
                type: RequestType.FETCH,
                url: context.url,
            });
        }
    });
    return fetchProxy;
}
function getNextRequestIndex() {
    var result = nextRequestIndex;
    nextRequestIndex += 1;
    return result;
}
//# sourceMappingURL=requestCollection.js.map